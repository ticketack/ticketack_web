version: '3.8'

services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        user: laravel
        uid: 1000
    restart: always
    environment:
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 0
      APP_ENV: production
      APP_DEBUG: "false"
      # Ajoutez vos variables d'environnement de production ici
      DB_HOST: db
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_KEY: ${APP_KEY}
      APP_URL: ${APP_URL}
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
      - ./docker-compose/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./docker-compose/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
    depends_on:
      - db

  db:
    image: mysql:8.0
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public
      - ./docker-compose/nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./docker-compose/nginx/ssl:/etc/nginx/ssl
      - ./docker-compose/nginx/certbot:/var/www/certbot
      - ./docker-compose/nginx/certbot:/etc/nginx/certbot
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    volumes:
      - ./docker-compose/nginx/certbot:/var/www/certbot
      - ./docker-compose/nginx/ssl:/etc/letsencrypt

volumes:
  mysql_data:
    driver: local
